<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置db.properties配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置C3P0连接池-->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--配置事务核心管理器-->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--开启注解事务-->
    <tx:annotation-driven/>

    <!--xml配置事务：配置事务通知-->
    <!--<tx:advice id="interceptor">
        <tx:attributes>
            <tx:method name="get*" isolation="REPEATABLE_READ"/>
            <tx:method name="save*" isolation="REPEATABLE_READ"/>
        </tx:attributes>
    </tx:advice>-->
    <!--xml配置事务：配置将通知织入目标对象-->
    <!--<aop:config>
        <aop:pointcut id="txPc" expression="execution(* top.wanvr.service.impl.*ServiceImpl.*(..))"/>
        <aop:advisor advice-ref="interceptor" pointcut-ref="txPc"/>
    </aop:config>-->

    <!--将SessionFactory配置到Spring容器中-->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--将连接池注入到sessionFactory中-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置Hibernate基本信息-->
        <property name="hibernateProperties">
            <props>
                <!--必选配置-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--可选配置-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!--引入orm元数据（实体配置）指定实体配置所在的包路径，Spring会自动读取包中的所有配置-->
        <property name="mappingDirectoryLocations" value="classpath:top/wanvr/entity"/>
    </bean>

 <!-- ======================================================================================================= -->
    <!--Action配置 注意：Action对象作用范围一定是多例的，这样才符合Struts2架构-->
    <bean name="userAction" class="top.wanvr.web.action.UserAction" scope="prototype">
        <property name="us" ref="us"/>
    </bean>
    <!--service配置-->
    <bean name="us" class="top.wanvr.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>
    <!--dao-->
    <bean name="userDao" class="top.wanvr.dao.impl.UserDaoImpl">
        <!--注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!--下面是customerAction的配置-->
    <bean name="customerAction" class="top.wanvr.web.action.CustomerAction" scope="prototype">
        <property name="cs" ref="cs"/>
    </bean>
    <!--service配置-->
    <bean name="cs" class="top.wanvr.service.impl.CustomerServiceImpl">
        <property name="cd" ref="customerDao"/>
    </bean>
    <!--dao-->
    <bean name="customerDao" class="top.wanvr.dao.impl.CustomerDaoImpl">
        <!--注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--下面是BaseDictAction的配置-->
    <bean name="baseDictAction" class="top.wanvr.web.action.BaseDictAction" scope="prototype">
        <property name="baseDictService" ref="baseDictService"/>
    </bean>
    <!--service配置-->
    <bean name="baseDictService" class="top.wanvr.service.impl.BaseDictServiceImpl">
        <property name="bdd" ref="baseDictDao"/>
    </bean>
    <!--dao-->
    <bean name="baseDictDao" class="top.wanvr.dao.impl.BaseDictDaoImpl">
        <!--注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--下面是LinkManAction的配置-->
    <bean name="linkManAction" class="top.wanvr.web.action.LinkManAction" scope="prototype">
        <property name="lms" ref="linkManService"/>
    </bean>
    <!--service配置-->
    <bean name="linkManService" class="top.wanvr.service.impl.LinkManServiceImpl">
        <property name="lmd" ref="linkManDao"/>
    </bean>
    <!--dao-->
    <bean name="linkManDao" class="top.wanvr.dao.impl.LinkManDaoImpl">
        <!--注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
</beans>